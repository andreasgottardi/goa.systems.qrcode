plugins {
	id 'java-library'
	id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = ARTIFACT_VERSION

repositories {
	mavenCentral()
	maven {url 'https://maven.goa.systems'}
}

dependencies {

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
	testImplementation 'org.junit.platform:junit-platform-commons:1.7.0'
	
	implementation 'goa.systems:commons:0.0.2'
	
	/* Logging */
	implementation 'org.slf4j:slf4j-api:1.7.30'
	testRuntimeOnly 'ch.qos.logback:logback-core:1.2.3'
	testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
	
	/* QR code logic */
	implementation 'com.google.zxing:core:3.4.1'
	implementation 'com.google.zxing:javase:3.4.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
	repositories {
        maven {
            url = REPO_DIR
        }
    }
    publications {
        mavenJava(MavenPublication) {
        	groupId = 'goa.systems'
        	artifactId = 'qrcode'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'GOA systems qrcode'
                description = 'Library containing qr code generator logic.'
                url = 'https://goa.systems/qrcode'
                licenses {
                    license {
                        name = 'GPLv3'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'goa'
                        name = 'Andreas Gottardi'
                        email = 'goa@goa.systems'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:andreasgottardi/goa.systems.qrcode.git'
                    url = 'https://github.com/goa.systems.qrcode'
                }
            }
        }
    }
}

/*  This task exports the generated jar files into the directory "build/remote".
    Build tasks can grab them from there and handle them as needed. */
task localPublish (group: 'publishing', description: 'Exports all jar files to publish') {
	
	dependsOn publish
	mustRunAfter publish
    doLast {
		copy {
			from(fileTree(REPO_DIR) { includes }.files) {
		        include '**/*.jar'
		        include '**/*.pom'
		    }
		    into 'build/remote'
	    }
	}
}
